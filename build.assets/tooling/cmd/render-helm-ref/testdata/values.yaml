# Simple documented value :)

# authServer(string) -- is the address of the Teleport cluster whose resources are managed
# by the operator. The address must contain both the domain name and the port of
# the Teleport cluster. It can be either the address of the auth servers or the
# proxy servers.
#
# For example:
#   - joining a Proxy: `teleport.example.com:443` or `teleport.example.com:3080`
#   - joining an Auth: `teleport-auth.example.com:3025`
authServer: ""

# Nested documented value, without the table on the parent.
# Here annotations will be documented but won't have a table showing its type
# and default value because its type is not specified.

# annotations -- allows to control Kubernetes annotations of the resources
# created by the chart.
annotations:
  # annotations.deployment(object) -- controls the Kubernetes Deployment annotations...
  deployment: {}
  # annotations.pod(object) -- controls the Kubernetes Pod annotations...
  pod: {}

# Just add the title, no description nor table.
# labels --
labels:
  #labels.deployment(object) -- controls ...
  deployment: {}

# Nested values documented at the parent level.
# The podSecurityContext is documented as a single value. Its default will
# be serialized in JSON.

# podSecurityContext(object) -- sets the pod security context for any pods created by the chart.
# See [the Kubernetes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
# for more details.
#
# The default value supports running under the `restricted`
# [Pod Security Standard](https://kubernetes.io/docs/concepts/security/pod-security-standards/).
podSecurityContext:
  seccompProfile: RuntimeDefault
  runAsUser: 65532
  runAsGroup: 65532
  fsGroup: 65532
  runAsNonRoot: true

# Undocumented value because there's no tag
foo: bar
